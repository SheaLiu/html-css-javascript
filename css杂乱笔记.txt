一、属性选择器
语法 E[attribute]
找到具有attribute属性的元素
属性可以自定义

		a[href]{
			color: red;
		}
		a[custom]{
			color:yellow;
		}
    
  
		E[attribute]
	找到属性值为attribute元素
		
		a[href=https]{
			color:pink;
		}
    
    
	   E[att~=value]
			适用于多个属性值，只要包含其中一个
		
		p[col~=cl1]{
			color:red;
		}
	
  
		E[attr|=value]
		选择有指定开头的元素	
		value:必须是个完整的单词;
		
		p[lang|=zh]{
			color: red;
		}
		
    
    E[att^=value]
		选择属性值是指定开头的元素
		 
		p[class^=aaa]{
			color:red;
		}
		
    
    E[attr$=value]
			匹配属性值以指定字符结尾的所有元素
	
		p[class$=cd]{
			color:red;
		}
		
    
    E[attr*=value]
		匹配属性值包含指定字符的所有元素
	
    p[class*=bb]{color:blue;}
    
    
    
   二、伪类选择器和类选择器的区别
   1.类选择器：使用之前，要设置元素的class(属性)
    
        
   2.伪类选择器
			E:link{};
			作用：匹配所有未被点击的链接元素
		
		  a:link{ color:red; }
		
    
      E:visited{}
			匹配点了的超链接，已经被点击过
		
		  a:visited{ color:gray; }
		  a:hover{}
			作用：鼠标放到元素上
		
		  a:hover{ color:yellow; }
		  a:active{};
			鼠标按下时候的状态
		  a:active{ color:blue; }
		
      顺序：link-visited-hover-active
			1.link和visited必须在hover前
			2.active必须放在hover后面
       
		  
      匹配所有<p>下的第一个<i>元素
	
		  p>i:first-child{ color:red; }
      p>i:last-child{ color:blue; }
        
        
		  匹配所有作为第一个子元素<h3>元素中的所有<i>元素
       h3:first-child i{ color:red; }
        

      ::first-line:
			向文本的首行添加特殊样式
		  p2::first-line{ background-color: red; }
      
      
		  /*混合添加样式*/
		  #p2::first-letter{ 
			font-size: 20px;
			color: red;
			background-color: blue;
			border:1px solid red; 
		  }
		
		:before:在元素内容前面添加新的内容;
		 #p3:before{ 
			/*content: "新的内容";*/
			content: url(img/1.jpg);
			/*width: 50px;
			height: 50px;
			display: block;*/
			}
    
    
    
    
